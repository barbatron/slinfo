/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel } from './VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel } from './VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel';
import type { VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel } from './VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel';
import {
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel';

/**
 * Information about a call on the trip leg.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel {
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    stopPoint: VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel;
    /**
     * The planned arrival time for the call in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    plannedArrivalTime?: string | null;
    /**
     * The planned departure time for the call in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    plannedDepartureTime?: string | null;
    /**
     * The estimated arrival time for the call in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    estimatedArrivalTime?: string | null;
    /**
     * The estimated departure time for the call in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    estimatedDepartureTime?: string | null;
    /**
     * The best known time of the call in RFC 3339 format. Is EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    readonly estimatedOtherwisePlannedArrivalTime?: string | null;
    /**
     * The best known time of the call in RFC 3339 format. Is EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    readonly estimatedOtherwisePlannedDepartureTime?: string | null;
    /**
     * The planned platform of the call.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    plannedPlatform?: string | null;
    /**
     * The estimated platform of the call.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    estimatedPlatform?: string | null;
    /**
     * The latitude of the stop point of the call.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    latitude?: number | null;
    /**
     * The longitude of the stop point of the call.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    longitude?: number | null;
    /**
     * The index of the stop point of the call.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    index?: string | null;
    /**
     * The call is on the trip leg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isOnTripLeg?: boolean | null;
    /**
     * The call is the first on the trip leg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isTripLegStart?: boolean | null;
    /**
     * The call is the last on the trip leg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isTripLegStop?: boolean | null;
    /**
     * The primary tariff zone of the call. A call can be related to a stop area with multiple tariff zones
     * and this is the zone that for example should be displayed in overviews etc.
     * @type {Array<VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    tariffZones?: Array<VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel> | null;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    occupancy?: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel;
    /**
     * Flag indicating if the call is cancelled.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isCancelled?: boolean;
    /**
     * Flag indicating if the departure is cancelled.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isDepartureCancelled?: boolean | null;
    /**
     * Flag indicating if the arrival is cancelled.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel
     */
    isArrivalCancelled?: boolean | null;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "stopPoint" in value;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel {
    return VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stopPoint': VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModelFromJSON(json['stopPoint']),
        'plannedArrivalTime': !exists(json, 'plannedArrivalTime') ? undefined : json['plannedArrivalTime'],
        'plannedDepartureTime': !exists(json, 'plannedDepartureTime') ? undefined : json['plannedDepartureTime'],
        'estimatedArrivalTime': !exists(json, 'estimatedArrivalTime') ? undefined : json['estimatedArrivalTime'],
        'estimatedDepartureTime': !exists(json, 'estimatedDepartureTime') ? undefined : json['estimatedDepartureTime'],
        'estimatedOtherwisePlannedArrivalTime': !exists(json, 'estimatedOtherwisePlannedArrivalTime') ? undefined : json['estimatedOtherwisePlannedArrivalTime'],
        'estimatedOtherwisePlannedDepartureTime': !exists(json, 'estimatedOtherwisePlannedDepartureTime') ? undefined : json['estimatedOtherwisePlannedDepartureTime'],
        'plannedPlatform': !exists(json, 'plannedPlatform') ? undefined : json['plannedPlatform'],
        'estimatedPlatform': !exists(json, 'estimatedPlatform') ? undefined : json['estimatedPlatform'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'index': !exists(json, 'index') ? undefined : json['index'],
        'isOnTripLeg': !exists(json, 'isOnTripLeg') ? undefined : json['isOnTripLeg'],
        'isTripLegStart': !exists(json, 'isTripLegStart') ? undefined : json['isTripLegStart'],
        'isTripLegStop': !exists(json, 'isTripLegStop') ? undefined : json['isTripLegStop'],
        'tariffZones': !exists(json, 'tariffZones') ? undefined : (json['tariffZones'] === null ? null : (json['tariffZones'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModelFromJSON)),
        'occupancy': !exists(json, 'occupancy') ? undefined : VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSON(json['occupancy']),
        'isCancelled': !exists(json, 'isCancelled') ? undefined : json['isCancelled'],
        'isDepartureCancelled': !exists(json, 'isDepartureCancelled') ? undefined : json['isDepartureCancelled'],
        'isArrivalCancelled': !exists(json, 'isArrivalCancelled') ? undefined : json['isArrivalCancelled'],
    };
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stopPoint': VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModelToJSON(value.stopPoint),
        'plannedArrivalTime': value.plannedArrivalTime,
        'plannedDepartureTime': value.plannedDepartureTime,
        'estimatedArrivalTime': value.estimatedArrivalTime,
        'estimatedDepartureTime': value.estimatedDepartureTime,
        'plannedPlatform': value.plannedPlatform,
        'estimatedPlatform': value.estimatedPlatform,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'index': value.index,
        'isOnTripLeg': value.isOnTripLeg,
        'isTripLegStart': value.isTripLegStart,
        'isTripLegStop': value.isTripLegStop,
        'tariffZones': value.tariffZones === undefined ? undefined : (value.tariffZones === null ? null : (value.tariffZones as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModelToJSON)),
        'occupancy': VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelToJSON(value.occupancy),
        'isCancelled': value.isCancelled,
        'isDepartureCancelled': value.isDepartureCancelled,
        'isArrivalCancelled': value.isArrivalCancelled,
    };
}

