/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Contains detailed information about a direction and its components.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel {
    /**
     * The original direction string.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    fullDirection?: string | null;
    /**
     * The direction string after parsing and removing the different components.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    shortDirection?: string | null;
    /**
     * The name of the replaced line, if any. Parses and replaces the following component: ", Ersätter [replaces]"
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    replaces?: string | null;
    /**
     * The name of the via location, if any. Parses and replaces the following component: ", via [via]"
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    via?: string | null;
    /**
     * Whether the service is free. Parses and replaces the following component: ", Fri resa"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isFreeService?: boolean | null;
    /**
     * Whether the service is paid. Parses and replaces the following component: ", Avgiftsbelagd tur"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isPaidService?: boolean | null;
    /**
     * Whether the service is a swimming service. Parses and replaces the following component: ", Badbuss"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isSwimmingService?: boolean | null;
    /**
     * Whether the service is a direct destination bus. Parses and replaces the following component: ", Direktbuss"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isDirectDestinationBus?: boolean | null;
    /**
     * Whether the service has front entry. Parses and replaces the following component: ", Påstigning fram"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isFrontEntry?: boolean | null;
    /**
     * Whether the service is an extra bus. Parses and replaces the following component: ", Extrabuss"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isExtraBus?: boolean | null;
    /**
     * Whether the service is an extra boat. Parses and replaces the following component: ", Extrabåt"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isExtraBoat?: boolean | null;
    /**
     * Whether the service is an extra tram. Parses and replaces the following component: ", Extravagn"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isExtraTram?: boolean | null;
    /**
     * Whether the service is a school bus. Parses and replaces the following component: ", Skolbuss"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isSchoolBus?: boolean | null;
    /**
     * Whether the service is an express bus. Parses and replaces the following component: ", Snabbuss"
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    isExpressBus?: boolean | null;
    /**
     * The name of the fortified line, if any. Parses and replaces the following component: ", Fortifies [fortifies]"
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel
     */
    fortifiesLine?: string | null;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel {
    return VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fullDirection': !exists(json, 'fullDirection') ? undefined : json['fullDirection'],
        'shortDirection': !exists(json, 'shortDirection') ? undefined : json['shortDirection'],
        'replaces': !exists(json, 'replaces') ? undefined : json['replaces'],
        'via': !exists(json, 'via') ? undefined : json['via'],
        'isFreeService': !exists(json, 'isFreeService') ? undefined : json['isFreeService'],
        'isPaidService': !exists(json, 'isPaidService') ? undefined : json['isPaidService'],
        'isSwimmingService': !exists(json, 'isSwimmingService') ? undefined : json['isSwimmingService'],
        'isDirectDestinationBus': !exists(json, 'isDirectDestinationBus') ? undefined : json['isDirectDestinationBus'],
        'isFrontEntry': !exists(json, 'isFrontEntry') ? undefined : json['isFrontEntry'],
        'isExtraBus': !exists(json, 'isExtraBus') ? undefined : json['isExtraBus'],
        'isExtraBoat': !exists(json, 'isExtraBoat') ? undefined : json['isExtraBoat'],
        'isExtraTram': !exists(json, 'isExtraTram') ? undefined : json['isExtraTram'],
        'isSchoolBus': !exists(json, 'isSchoolBus') ? undefined : json['isSchoolBus'],
        'isExpressBus': !exists(json, 'isExpressBus') ? undefined : json['isExpressBus'],
        'fortifiesLine': !exists(json, 'fortifiesLine') ? undefined : json['fortifiesLine'],
    };
}

export function VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsDirectionDetailsApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fullDirection': value.fullDirection,
        'shortDirection': value.shortDirection,
        'replaces': value.replaces,
        'via': value.via,
        'isFreeService': value.isFreeService,
        'isPaidService': value.isPaidService,
        'isSwimmingService': value.isSwimmingService,
        'isDirectDestinationBus': value.isDirectDestinationBus,
        'isFrontEntry': value.isFrontEntry,
        'isExtraBus': value.isExtraBus,
        'isExtraBoat': value.isExtraBoat,
        'isExtraTram': value.isExtraTram,
        'isSchoolBus': value.isSchoolBus,
        'isExpressBus': value.isExpressBus,
        'fortifiesLine': value.fortifiesLine,
    };
}

