/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel';
import type { VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel } from './VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel';
import {
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel';

/**
 * Information about a journey.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel {
    /**
     * A reference that can be used to reconstruct this journey at a later time.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    reconstructionReference?: string | null;
    /**
     * A reference that should be used when getting detailed information about the journey.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    detailsReference?: string | null;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    departureAccessLink?: VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel;
    /**
     * A list of trip legs on a journey, when applicable. A journey has either one or more trip legs or one
     * destination link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    tripLegs?: Array<VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel> | null;
    /**
     * A list of ConnectionLinks between TripLegs, when applicable. The internal order of TripLegs and ConnectionLinks is defined by Index-property on the objects.
     * @type {Array<VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    connectionLinks?: Array<VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel> | null;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    arrivalAccessLink?: VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    destinationLink?: VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel;
    /**
     * Flag indicating if the first trip leg of the journey is departed.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    isDeparted?: boolean | null;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
     */
    occupancy?: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel {
    return VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reconstructionReference': !exists(json, 'reconstructionReference') ? undefined : json['reconstructionReference'],
        'detailsReference': !exists(json, 'detailsReference') ? undefined : json['detailsReference'],
        'departureAccessLink': !exists(json, 'departureAccessLink') ? undefined : VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModelFromJSON(json['departureAccessLink']),
        'tripLegs': !exists(json, 'tripLegs') ? undefined : (json['tripLegs'] === null ? null : (json['tripLegs'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModelFromJSON)),
        'connectionLinks': !exists(json, 'connectionLinks') ? undefined : (json['connectionLinks'] === null ? null : (json['connectionLinks'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModelFromJSON)),
        'arrivalAccessLink': !exists(json, 'arrivalAccessLink') ? undefined : VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSON(json['arrivalAccessLink']),
        'destinationLink': !exists(json, 'destinationLink') ? undefined : VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModelFromJSON(json['destinationLink']),
        'isDeparted': !exists(json, 'isDeparted') ? undefined : json['isDeparted'],
        'occupancy': !exists(json, 'occupancy') ? undefined : VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelFromJSON(json['occupancy']),
    };
}

export function VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reconstructionReference': value.reconstructionReference,
        'detailsReference': value.detailsReference,
        'departureAccessLink': VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModelToJSON(value.departureAccessLink),
        'tripLegs': value.tripLegs === undefined ? undefined : (value.tripLegs === null ? null : (value.tripLegs as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModelToJSON)),
        'connectionLinks': value.connectionLinks === undefined ? undefined : (value.connectionLinks === null ? null : (value.connectionLinks as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModelToJSON)),
        'arrivalAccessLink': VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelToJSON(value.arrivalAccessLink),
        'destinationLink': VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModelToJSON(value.destinationLink),
        'isDeparted': value.isDeparted,
        'occupancy': VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModelToJSON(value.occupancy),
    };
}

