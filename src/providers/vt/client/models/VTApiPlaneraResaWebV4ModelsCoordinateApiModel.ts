/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the coordinates
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsCoordinateApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsCoordinateApiModel {
    /**
     * The latitude of this position (WGS84).
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    latitude?: number;
    /**
     * The longitude of this position (WGS84).
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    longitude?: number;
    /**
     * The elevation of this position (WGS84).
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    elevation?: number | null;
    /**
     * The coordinate is on the tripleg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    isOnTripLeg?: boolean | null;
    /**
     * The coordinate is on the first call of the leg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    isTripLegStart?: boolean | null;
    /**
     * The coordinate is on the last call of the leg.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsCoordinateApiModel
     */
    isTripLegStop?: boolean | null;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsCoordinateApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsCoordinateApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsCoordinateApiModel {
    return VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsCoordinateApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'elevation': !exists(json, 'elevation') ? undefined : json['elevation'],
        'isOnTripLeg': !exists(json, 'isOnTripLeg') ? undefined : json['isOnTripLeg'],
        'isTripLegStart': !exists(json, 'isTripLegStart') ? undefined : json['isTripLegStart'],
        'isTripLegStop': !exists(json, 'isTripLegStop') ? undefined : json['isTripLegStop'],
    };
}

export function VTApiPlaneraResaWebV4ModelsCoordinateApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsCoordinateApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'latitude': value.latitude,
        'longitude': value.longitude,
        'elevation': value.elevation,
        'isOnTripLeg': value.isOnTripLeg,
        'isTripLegStart': value.isTripLegStart,
        'isTripLegStop': value.isTripLegStop,
    };
}

