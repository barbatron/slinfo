/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaWebV4ModelsCoordinateApiModel } from './VTApiPlaneraResaWebV4ModelsCoordinateApiModel';
import {
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsCoordinateApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysCallApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysCallApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysCallApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysCallApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysCallApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysCallApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModel } from './VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModel';
import type { VTApiPlaneraResaWebV4ModelsNoteApiModel } from './VTApiPlaneraResaWebV4ModelsNoteApiModel';
import {
    VTApiPlaneraResaWebV4ModelsNoteApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsNoteApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsNoteApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsNoteApiModel';
import type { VTApiPlaneraResaWebV4ModelsTransportMode } from './VTApiPlaneraResaWebV4ModelsTransportMode';
import {
    VTApiPlaneraResaWebV4ModelsTransportModeFromJSON,
    VTApiPlaneraResaWebV4ModelsTransportModeFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsTransportModeToJSON,
} from './VTApiPlaneraResaWebV4ModelsTransportMode';
import type { VTApiPlaneraResaWebV4ModelsTransportSubMode } from './VTApiPlaneraResaWebV4ModelsTransportSubMode';
import {
    VTApiPlaneraResaWebV4ModelsTransportSubModeFromJSON,
    VTApiPlaneraResaWebV4ModelsTransportSubModeFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsTransportSubModeToJSON,
} from './VTApiPlaneraResaWebV4ModelsTransportSubMode';

/**
 * Information about a walk, bike or car link from last public transport trip leg to destination.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel {
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsTransportMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    transportMode?: VTApiPlaneraResaWebV4ModelsTransportMode;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsTransportSubMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    transportSubMode?: VTApiPlaneraResaWebV4ModelsTransportSubMode;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneysCallApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    origin?: VTApiPlaneraResaWebV4ModelsJourneysCallApiModel;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    destination?: VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModel;
    /**
     * An ordered list (most important first) of notes related to the access link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsNoteApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    notes?: Array<VTApiPlaneraResaWebV4ModelsNoteApiModel> | null;
    /**
     * Distance in meters.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    distanceInMeters?: number | null;
    /**
     * The planned departure time in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    plannedDepartureTime?: string | null;
    /**
     * The planned arrival time in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    plannedArrivalTime?: string | null;
    /**
     * The planned duration in minutes.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    plannedDurationInMinutes?: number | null;
    /**
     * The estimated departure time in RFC 3339 format, if available.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    estimatedDepartureTime?: string | null;
    /**
     * The estimated arrival time in RFC 3339 format, if available.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    estimatedArrivalTime?: string | null;
    /**
     * The estimated duration in minutes, if available.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    estimatedDurationInMinutes?: number | null;
    /**
     * Number of steps based on the distance and an estimated step length of 0.65 meters.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    estimatedNumberOfSteps?: number | null;
    /**
     * The coordinates for the link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsCoordinateApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    linkCoordinates?: Array<VTApiPlaneraResaWebV4ModelsCoordinateApiModel> | null;
    /**
     * The segments that make up this link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
     */
    segments?: Array<VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModel> | null;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel {
    return VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transportMode': !exists(json, 'transportMode') ? undefined : VTApiPlaneraResaWebV4ModelsTransportModeFromJSON(json['transportMode']),
        'transportSubMode': !exists(json, 'transportSubMode') ? undefined : VTApiPlaneraResaWebV4ModelsTransportSubModeFromJSON(json['transportSubMode']),
        'origin': !exists(json, 'origin') ? undefined : VTApiPlaneraResaWebV4ModelsJourneysCallApiModelFromJSON(json['origin']),
        'destination': !exists(json, 'destination') ? undefined : VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModelFromJSON(json['destination']),
        'notes': !exists(json, 'notes') ? undefined : (json['notes'] === null ? null : (json['notes'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsNoteApiModelFromJSON)),
        'distanceInMeters': !exists(json, 'distanceInMeters') ? undefined : json['distanceInMeters'],
        'plannedDepartureTime': !exists(json, 'plannedDepartureTime') ? undefined : json['plannedDepartureTime'],
        'plannedArrivalTime': !exists(json, 'plannedArrivalTime') ? undefined : json['plannedArrivalTime'],
        'plannedDurationInMinutes': !exists(json, 'plannedDurationInMinutes') ? undefined : json['plannedDurationInMinutes'],
        'estimatedDepartureTime': !exists(json, 'estimatedDepartureTime') ? undefined : json['estimatedDepartureTime'],
        'estimatedArrivalTime': !exists(json, 'estimatedArrivalTime') ? undefined : json['estimatedArrivalTime'],
        'estimatedDurationInMinutes': !exists(json, 'estimatedDurationInMinutes') ? undefined : json['estimatedDurationInMinutes'],
        'estimatedNumberOfSteps': !exists(json, 'estimatedNumberOfSteps') ? undefined : json['estimatedNumberOfSteps'],
        'linkCoordinates': !exists(json, 'linkCoordinates') ? undefined : (json['linkCoordinates'] === null ? null : (json['linkCoordinates'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSON)),
        'segments': !exists(json, 'segments') ? undefined : (json['segments'] === null ? null : (json['segments'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModelFromJSON)),
    };
}

export function VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transportMode': VTApiPlaneraResaWebV4ModelsTransportModeToJSON(value.transportMode),
        'transportSubMode': VTApiPlaneraResaWebV4ModelsTransportSubModeToJSON(value.transportSubMode),
        'origin': VTApiPlaneraResaWebV4ModelsJourneysCallApiModelToJSON(value.origin),
        'destination': VTApiPlaneraResaWebV4ModelsJourneysLinkEndpointApiModelToJSON(value.destination),
        'notes': value.notes === undefined ? undefined : (value.notes === null ? null : (value.notes as Array<any>).map(VTApiPlaneraResaWebV4ModelsNoteApiModelToJSON)),
        'distanceInMeters': value.distanceInMeters,
        'plannedDepartureTime': value.plannedDepartureTime,
        'plannedArrivalTime': value.plannedArrivalTime,
        'plannedDurationInMinutes': value.plannedDurationInMinutes,
        'estimatedDepartureTime': value.estimatedDepartureTime,
        'estimatedArrivalTime': value.estimatedArrivalTime,
        'estimatedDurationInMinutes': value.estimatedDurationInMinutes,
        'estimatedNumberOfSteps': value.estimatedNumberOfSteps,
        'linkCoordinates': value.linkCoordinates === undefined ? undefined : (value.linkCoordinates === null ? null : (value.linkCoordinates as Array<any>).map(VTApiPlaneraResaWebV4ModelsCoordinateApiModelToJSON)),
        'segments': value.segments === undefined ? undefined : (value.segments === null ? null : (value.segments as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneysLinkSegmentApiModelToJSON)),
    };
}

