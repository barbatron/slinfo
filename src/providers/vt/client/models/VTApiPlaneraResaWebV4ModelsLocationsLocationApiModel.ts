/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaWebV4ModelsLocationType } from './VTApiPlaneraResaWebV4ModelsLocationType';
import {
    VTApiPlaneraResaWebV4ModelsLocationTypeFromJSON,
    VTApiPlaneraResaWebV4ModelsLocationTypeFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsLocationTypeToJSON,
} from './VTApiPlaneraResaWebV4ModelsLocationType';

/**
 * Information about a location.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel {
    /**
     * The 16-digit Västtrafik gid.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    gid?: string | null;
    /**
     * The location name.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    name: string;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsLocationType}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    locationType: VTApiPlaneraResaWebV4ModelsLocationType;
    /**
     * The WGS84 latitude of the location.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    latitude?: number | null;
    /**
     * The WGS84 longitude of the location.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    longitude?: number | null;
    /**
     * The location platform, only available for stop points.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    platform?: string | null;
    /**
     * The location straight line distance in meters.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    straightLineDistanceInMeters?: number | null;
    /**
     * Is "Närtrafik" (Local Service) available for the location?
     * Values are only available for LocationType: StopArea, PointOfInterest and Address.
     * Values are only available for endpoint: locations/by-text.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
     */
    hasLocalService?: boolean | null;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsLocationsLocationApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "locationType" in value;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsLocationsLocationApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel {
    return VTApiPlaneraResaWebV4ModelsLocationsLocationApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsLocationsLocationApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gid': !exists(json, 'gid') ? undefined : json['gid'],
        'name': json['name'],
        'locationType': VTApiPlaneraResaWebV4ModelsLocationTypeFromJSON(json['locationType']),
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'platform': !exists(json, 'platform') ? undefined : json['platform'],
        'straightLineDistanceInMeters': !exists(json, 'straightLineDistanceInMeters') ? undefined : json['straightLineDistanceInMeters'],
        'hasLocalService': !exists(json, 'hasLocalService') ? undefined : json['hasLocalService'],
    };
}

export function VTApiPlaneraResaWebV4ModelsLocationsLocationApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gid': value.gid,
        'name': value.name,
        'locationType': VTApiPlaneraResaWebV4ModelsLocationTypeToJSON(value.locationType),
        'latitude': value.latitude,
        'longitude': value.longitude,
        'platform': value.platform,
        'straightLineDistanceInMeters': value.straightLineDistanceInMeters,
        'hasLocalService': value.hasLocalService,
    };
}

