/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  VTApiPlaneraResaWebV4ModelsApiError,
  VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModel,
} from '../models/index';
import {
    VTApiPlaneraResaWebV4ModelsApiErrorFromJSON,
    VTApiPlaneraResaWebV4ModelsApiErrorToJSON,
    VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModelToJSON,
} from '../models/index';

export interface ProductsJourneyticketGetRequest {
    originGid?: string;
    originLatitude?: number;
    originLongitude?: number;
    destinationGid?: string;
    destinationLatitude?: number;
    destinationLongitude?: number;
}

/**
 * 
 */
export class ProductsApi extends runtime.BaseAPI {

    /**
     * A position reference for origin can be originGid or a LatLong specified by both originLatitude and originLongitude                A position reference for destination can be destinationGid or a LatLong specified by both destinationLatitude and destinationLongitude                For an origin or destination to be valid, either a gid or a combination of latitude and longitude must be specified. A Gid takes precedence over latitude/longitude.                Sample request:                    GET /products/journeyticket?originGid=9021014001760000&destinationGid=9021014003980000                or                    GET /products/journeyticket?originLongitude=12.63308&originLatitude=58.028237&destinationLongitude=11.930897&destinationLatitude=57.586085
     * Returns least expensive ticket products between origin and destination for adult and youth.
     */
    async productsJourneyticketGetRaw(requestParameters: ProductsJourneyticketGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModel>>> {
        const queryParameters: any = {};

        if (requestParameters.originGid !== undefined) {
            queryParameters['originGid'] = requestParameters.originGid;
        }

        if (requestParameters.originLatitude !== undefined) {
            queryParameters['originLatitude'] = requestParameters.originLatitude;
        }

        if (requestParameters.originLongitude !== undefined) {
            queryParameters['originLongitude'] = requestParameters.originLongitude;
        }

        if (requestParameters.destinationGid !== undefined) {
            queryParameters['destinationGid'] = requestParameters.destinationGid;
        }

        if (requestParameters.destinationLatitude !== undefined) {
            queryParameters['destinationLatitude'] = requestParameters.destinationLatitude;
        }

        if (requestParameters.destinationLongitude !== undefined) {
            queryParameters['destinationLongitude'] = requestParameters.destinationLongitude;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("auth", []);
        }

        const response = await this.request({
            path: `/products/journeyticket`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModelFromJSON));
    }

    /**
     * A position reference for origin can be originGid or a LatLong specified by both originLatitude and originLongitude                A position reference for destination can be destinationGid or a LatLong specified by both destinationLatitude and destinationLongitude                For an origin or destination to be valid, either a gid or a combination of latitude and longitude must be specified. A Gid takes precedence over latitude/longitude.                Sample request:                    GET /products/journeyticket?originGid=9021014001760000&destinationGid=9021014003980000                or                    GET /products/journeyticket?originLongitude=12.63308&originLatitude=58.028237&destinationLongitude=11.930897&destinationLatitude=57.586085
     * Returns least expensive ticket products between origin and destination for adult and youth.
     */
    async productsJourneyticketGet(requestParameters: ProductsJourneyticketGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<VTApiPlaneraResaWebV4ModelsProductsTicketSpecificationApiModel>> {
        const response = await this.productsJourneyticketGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
